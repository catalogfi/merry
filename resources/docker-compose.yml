services:
  # RPC daemon
  bitcoin:
    image: "lncm/bitcoind:v28.0"
    container_name: bitcoin
    # wildcard user 0:0 to avoid permission problems
    user: 0:0
    restart: on-failure
    stop_grace_period: 30s
    ports:
      - "18443:18443"
      - "18444:18444"
      - "28332:28332"
      - "28333:28333"
    volumes:
      - "./volumes/bitcoin:/root/.bitcoin"
  arbitrum:
    image: "ghcr.io/catalogfi/garden_sol:latest"
    container_name: arbitrum
    environment:
      CHAIN_ID: 31338
      LIGHT: "false"
    ports:
      - "8546:8545"
  arbitrum-explorer:
    image: "otterscan/otterscan:latest"
    container_name: arbitrum-explorer
    depends_on:
      - arbitrum
    environment:
      ERIGON_URL: "http://localhost:8546"
    ports:
      - "5101:80"
      
  authenticator:
    image: "ghcr.io/catalogfi/authenticator:latest"
    container_name: authenticator
    restart: unless-stopped
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/authenticator/config.toml:/app/config.toml"
    ports:
      - "4427:4427"
  orderbookV2:
    image: "ghcr.io/catalogfi/garden-orderbook-v2:latest"
    container_name: orderbookV2
    restart: unless-stopped
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/orderbookV2/Settings.toml:/app/Settings.toml"
    ports:
      - "4455:4455"
  relayer:
    image: "ghcr.io/catalogfi/evm-swapper-relay:latest"
    container_name: relayer
    restart: unless-stopped
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/evm-swapper-relay/Settings.toml:/app/Settings.toml"
    ports:
      - "4426:4426"
  info:
    image: "ghcr.io/catalogfi/info-v2:latest"
    container_name: info
    restart: unless-stopped
    depends_on:
      - arbitrum
      - electrs
      - ethereum
    volumes:
      - "./config/info/config.json:/app/config.json"
    ports:
      - "4323:3001"
  quote:
    image: "ghcr.io/catalogfi/quote:latest"
    container_name: quote
    restart: unless-stopped
    depends_on:
      - ethereum
      - arbitrum
      - electrs
    volumes:
      - "./config/quote/config.json:/app/config.json"
      - "./config/quote/liquidity.toml:/app/liquidity.toml"
    ports:
      - "6969:6969"
  ethereum:
    image: "ghcr.io/catalogfi/garden_sol:latest"
    container_name: ethereum
    environment:
      CHAIN_ID: 31337
      LIGHT: "true"
    ports:
      - "8545:8545"
  ethereum-explorer:
    image: "otterscan/otterscan:latest"
    container_name: ethereum-explorer
    depends_on:
      - ethereum
    ports:
      - "5100:80"
  electrs:
    image: "ghcr.io/vulpemventures/electrs:latest"
    container_name: electrs
    entrypoint:
      - /build/electrs
    command:
      - "-vvvv"
      - "--network"
      - regtest
      - "--daemon-dir"
      - /config
      - "--daemon-rpc-addr"
      - "bitcoin:18443"
      - "--cookie"
      - "admin1:123"
      - "--http-addr"
      - "0.0.0.0:30000"
      - "--electrum-rpc-addr"
      - "0.0.0.0:50000"
      - "--cors"
      - "*"
      - "--jsonrpc-import"
    depends_on:
      - bitcoin
    ports:
      - "50000:50000"
      - "30000:30000"
    volumes:
      - "./volumes/bitcoin/:/config"
    restart: unless-stopped
  esplora:
    image: "ghcr.io/vulpemventures/esplora:latest"
    container_name: esplora
    depends_on:
      - chopsticks
    environment:
      API_URL: "http://localhost:3000"
    ports:
      - "5050:5000"
    restart: unless-stopped
  chopsticks:
    image: "ghcr.io/vulpemventures/nigiri-chopsticks:latest"
    container_name: chopsticks
    command:
      - "--use-faucet"
      - "--use-mining"
      - "--use-logger"
      - "--rpc-addr"
      - "bitcoin:18443"
      - "--electrs-addr"
      - "electrs:30000"
      - "--addr"
      - "0.0.0.0:3000"
    depends_on:
      - bitcoin
      - electrs
    ports:
      - "3000:3000"
    restart: unless-stopped
  postgres:
    image: "postgres:alpine"
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: garden
    ports:
      - "5432:5432"
    volumes:
      - "./volumes/orderbook_data:/var/lib/postgresql/data"
  bit-indexer:
    image: "ghcr.io/catalogfi/bitindexer:latest"
    container_name: bit-indexer
    restart: unless-stopped
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/bitindexer/config.json:/app/config.json"
  garden-db:
    image: "postgres:alpine"
    container_name: garden-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: garden
    ports:
      - "5433:5432"
    volumes:
      - "./volumes/ponder_data:/var/lib/postgresql/data"

  migrator:
    image: "ghcr.io/catalogfi/migrator:latest"
    container_name: migrator
    depends_on:
      - garden-db
    volumes:
      - "./config/migrator/config.json:/config.json"
    restart: no

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - "./volumes/cobi_data:/data"
  virtual-balance:
    image: "ghcr.io/catalogfi/virtual-balance:latest"
    container_name: virtual-balance
    ports:
      - "3008:3008"
    depends_on:
      - ethereum
      - electrs
    volumes:
      - "./config/virtual-balance/config.json:/app/config.json"
    restart: unless-stopped
  garden-evm-watcher:
    image: "ghcr.io/catalogfi/garden-evm-watcher:latest"
    container_name: garden-evm-watcher
    depends_on:
      - ethereum
      - arbitrum
      - chopsticks
      - garden-db
      - migrator
      - quote
    volumes:
      - "./config/garden-evm-watcher/config.json:/app/config.json"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
  bit-ponder:
    image: "ghcr.io/catalogfi/bit-ponder:latest"
    container_name: bit-ponder
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/bit-ponder/config.json:/config.json"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cobiv2:
    image: "ghcr.io/catalogfi/cobiv2:latest"
    container_name: cobiv2
    depends_on:
      - garden-evm-watcher
    volumes:
      - "./config/cobiv2/config.json:/config.json"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cosigner:
    image: "ghcr.io/catalogfi/cosigner:latest"
    container_name: cosigner
    ports:
      - "11818:11818"
    restart: unless-stopped
    environment:
      ELECTRS_URL: "http://electrs:30000"
      RPC_URL: "http://bitcoin:18443"
      RPC_USERNAME: "admin"
      RPC_PASSWORD: "123"
      BITCOIN_NETWORK: "regtest"
      COSIGNER_WIF: "cRRnaQ4Yjrp4gP1M29LaryN8SaYvDGrnPozmjk2qPPfp5z2Mch3J"

  rippled:
    image: xrpllabsofficial/xrpld:latest
    container_name: rippled
    platform: linux/amd64   
    ports:
      - "6006:6006"         
      - "51235:51235"       
      - "5005:5005"         
    volumes:
      - "./config/rippled/rippled.cfg:/config/rippled.cfg"
      - "./volumes/rippled-data:/var/lib/rippled"  
    environment:
      ENV_ARGS: "--start"     
    restart: unless-stopped   

  starknet-devnet:
    image: shardlabs/starknet-devnet-rs:0.3.0
    container_name: starknet-devnet
    command: ["--seed", "1", "--dump-on", "exit", "--dump-path", "/data/dump.json", "--block-generation-on", "transaction"]
    ports:
      - "8547:5050"
    volumes:
      - ./config/starknet-devnet/dump.json:/data/dump.json
    restart: unless-stopped
  garden-starknet-watcher:
    image: ghcr.io/catalogfi/garden-starknet-watcher:latest
    container_name: starknet-watcher
    depends_on:
      - starknet-devnet
      - garden-evm-watcher
    volumes:
      - ./config/starknet/watcher_config.toml:/app/config.toml
    restart: unless-stopped
  starknet-relayer:
    image: ghcr.io/catalogfi/starknet-relayer:latest
    container_name: starknet-relayer
    depends_on:
      - starknet-devnet
      - garden-db
      - garden-evm-watcher
    volumes:
      - ./config/starknet/relayer_config.toml:/app/settings.toml
    ports:
      - "4436:4436"
    restart: unless-stopped
  starknet-executor:
    image: ghcr.io/catalogfi/starknet-executor:latest
    container_name: starknet-executor
    depends_on:
      - starknet-devnet
      - garden-db
      - garden-evm-watcher
    volumes:
      - ./config/starknet/executor_config.toml:/app/settings.toml
    restart: unless-stopped
  garden-kiosk:
    image: ghcr.io/catalogfi/garden-kiosk:latest
    container_name: garden-kiosk
    ports:
      - "9898:80"
    restart: unless-stopped
  explorer:
    image: ghcr.io/catalogfi/explorer:latest
    container_name: explorer
    ports:
      - "8989:80"
    restart: unless-stopped
    depends_on: 
      - orderbookV2
      - info

  
  nginx:
    image: "nginx:latest"
    container_name: nginx
    volumes:
      - "./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"
    restart: unless-stopped 
networks:
  default:
    name: merry